#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

RELEASE="10.0"
MIRROR="ftp.freebsd.org"
MIRROR_PATH="pub/FreeBSD/releases/amd64/amd64/ISO-IMAGES"
ISO="FreeBSD-10.0-RELEASE-amd64-bootonly.iso"
ISO_DIR="/data/freebsd-iso"
ISO_MOUNT="/mnt/freebsd-iso"
CUSTOM_ISO_LAYOUT="/data/custom-freebsd-iso"
CUSTOM_ISO_TITLE="FREEBSD_INSTALL"
CUSTOM_ISO_FILENAME="freebsd-10-custom.iso"
INSTALLER_CFG="installerconfig"
RC_CONF=rc.conf

# Clean up ISO file if download is interupted
trap "rm -rf $PWD/${ISO_DIR}/${ISO}" SIGHUP SIGINT SIGKILL SIGTERM
# Delete Previous custom layout
trap "rm -rf $CUSTOM_ISO_LAYOUT" SIGHUP SIGINT SIGKILL SIGTERM

function fetch_iso() {
  if [[ ! -d $ISO_DIR ]]; then
    mkdir -p $ISO_DIR
  fi
  
  echo "==> Checking for local copy of $ISO..."
  if [[ -e $ISO_DIR/$ISO ]]; then
    echo "==> Found $ISO"
  else
      echo "==> Local copy not found."
      echo "==> Fetching ISO from $MIRROR..."
      cd $ISO_DIR
      curl -O --progress-bar ftp://${MIRROR}/${MIRROR_PATH}/${RELEASE}/${ISO}
      echo "==> Done!"
      echo "==> ${ISO} saved to $ISO_DIR/"
      cd
  fi
}

function create_layout() {
  echo "==> Creating custom ISO Layout"
  if [[ -d $CUSTOM_ISO_LAYOUT ]]; then
      echo "==> Previous layout $CUSTOM_ISO_LAYOUT exists...deleting"
      rm -rf $CUSTOM_ISO_LAYOUT
  fi
  echo "==> Creating $CUSTOM_ISO_LAYOUT"
  mkdir -p $CUSTOM_ISO_LAYOUT
  
  if [[ ! -d $ISO_MOUNT ]]; then
      echo "==> Creating $ISO_MOUNT ..."
      mkdir $ISO_MOUNT 
  fi
  
  if [[ $(df | grep $ISO_MOUNT) ]]; then
    echo "==> Unmounting previous $ISO_MOUNT..."
    umount $ISO_MOUNT
  fi
  
  echo "==> Mounting $ISO to $ISO_MOUNT"
  mount -t cd9660 /dev/`mdconfig -f $ISO_DIR/$ISO` $ISO_MOUNT
  
  echo "==> Copying layout from $ISO_MOUNT to $CUSTOM_ISO_LAYOUT"
  rsync -aq  $ISO_MOUNT/ $CUSTOM_ISO_LAYOUT
  
  echo "==> Copying guest tools to $CUSTOM_ISO_LAYOUT:"
  if [[ ! -d me-freebsd ]]; then
    echo "===> Getting me-freebsd..."
    git clone https://github.com/chorrell/me-freebsd.git
    else
    echo "===> Updating me-freebsd before copying to $CUSTOM_ISO_LAYOUT..."
    cd me-freebsd
    git pull
    cd ..
    echo "===> Copying me-freebsd to $CUSTOM_ISO_LAYOUT..."
    cp -R ./me-freebsd/ $CUSTOM_ISO_LAYOUT/ 
  fi
  echo "==> Enable console logging in /etc/syslog.conf"
  sed -i '.bak' -e 's/#console.info/console.info/g' $CUSTOM_ISO_LAYOUT/etc/syslog.conf
  
  echo "==> Copying $INSTALLER_CFG to $CUSTOM_ISO_LAYOUT"
  cp $INSTALLER_CFG $CUSTOM_ISO_LAYOUT/etc/
  
  echo "==> Copying rc.conf"
  cp $RC_CONF $CUSTOM_ISO_LAYOUT/etc/
  
  echo "==> Unmounting $ISO_MOUNT"
  umount $ISO_MOUNT
}

function create_newiso() {
  echo "==> Preparing NEW ISO"
  mkisofs -J -R -no-emul-boot \
    -V "$CUSTOM_ISO_TITLE" \
    -p "Joyent" -b boot/cdboot \
    -o $CUSTOM_ISO_FILENAME $CUSTOM_ISO_LAYOUT
  echo "==> Custom ISO now ready: $CUSTOM_ISO_FILENAME"
}

echo "==> ISO Build Starting!"
fetch_iso
create_layout
create_newiso
